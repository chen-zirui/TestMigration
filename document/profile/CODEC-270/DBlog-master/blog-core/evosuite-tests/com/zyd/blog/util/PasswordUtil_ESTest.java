/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 29 06:54:51 GMT 2023
 */

package com.zyd.blog.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.zyd.blog.util.PasswordUtil;
import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PasswordUtil_ESTest extends PasswordUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = PasswordUtil.decrypt("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      try { 
        PasswordUtil.encrypt((String) null, "UTF-16");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zyd.blog.util.AesUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      try { 
        PasswordUtil.decrypt("i^d8IH+>ZRBNDm9:%", "sxpB8/sSCeG7JYCP+CtNNe5tHJvTkxXx6vRnc4uj7ls=");
        fail("Expecting exception: IllegalBlockSizeException");
      
      } catch(IllegalBlockSizeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      try { 
        PasswordUtil.decrypt("5xfjDIgmprt1n95Du8+doA==", "5xfjDIgmprt1n95Du8+doA==");
        fail("Expecting exception: BadPaddingException");
      
      } catch(BadPaddingException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      try { 
        PasswordUtil.decrypt("ku6E!rl>wE8V", "ku6E!rl>wE8V");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Last encoded character (before the paddings if any) is a valid base 64 alphabet but not a possible value
         //
         verifyException("org.apache.commons.codec.binary.Base64", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String string0 = PasswordUtil.decrypt("dFcfTLiD0rD+BJAjva7zkw==", "");
      assertEquals("jWi.s#k", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PasswordUtil passwordUtil0 = new PasswordUtil();
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String string0 = PasswordUtil.encrypt("", "");
      assertEquals("5VmWq3aJYfG+R8Cm/Hk4fw==", string0);
  }
}
