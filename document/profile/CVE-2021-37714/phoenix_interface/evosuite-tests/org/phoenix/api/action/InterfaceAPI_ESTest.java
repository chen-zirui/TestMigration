/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 25 09:14:54 GMT 2023
 */

package org.phoenix.api.action;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.meterware.httpunit.WebConversation;
import java.io.File;
import java.net.URI;
import java.net.URL;
import java.net.URLStreamHandler;
import java.nio.charset.IllegalCharsetNameException;
import java.util.HashMap;
import javax.net.ssl.HttpsURLConnection;
import org.apache.axis.transport.java.Handler;
import org.apache.http.client.HttpClient;
import org.apache.http.entity.ContentType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.jsoup.nodes.Document;
import org.junit.runner.RunWith;
import org.phoenix.api.action.InterfaceAPI;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InterfaceAPI_ESTest extends InterfaceAPI_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      HashMap<String, String> hashMap0 = new HashMap<String, String>(1681);
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByJsoup("", (String) null, hashMap0, hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must supply a valid URL
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      interfaceAPI0.getJSONValue("The FileFilter must not be null", "Invalid header: ");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByGet("){S~Wd& L1-KL", hashMap0, hashMap1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No protocol specified in URL '){S~Wd& L1-KL'
         //
         verifyException("com.meterware.httpunit.WebRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByPost("B", hashMap0, hashMap1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No protocol specified in URL 'B'
         //
         verifyException("com.meterware.httpunit.WebRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      MockFile mockFile0 = new MockFile(" Opmz", "D*9<glKht.J");
      mockFile0.createNewFile();
      // Undeclared exception!
      try { 
        interfaceAPI0.parseFileToDom((File) mockFile0, ".l3S!}Mx2h?4 O.$X'`");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // .l3S!}Mx2h?4 O.$X'`
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByPost((String) null, hashMap0, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.meterware.httpunit.WebRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByPost("A ubrDFdsZq", "A ubrDFdsZq", (-3147), hashMap0, hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No protocol specified in URL 'A ubrDFdsZq'
         //
         verifyException("com.meterware.httpunit.WebRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByPost((String) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.meterware.httpunit.WebRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByPost("$ WM0/f9,ah!");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No protocol specified in URL '$ WM0/f9,ah!'
         //
         verifyException("com.meterware.httpunit.WebRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByJsoup("mw\"w4`", "mw\"w4`", hashMap0, hashMap0, hashMap0, false, "mw\"w4`");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed URL: mw\"w4`
         //
         verifyException("org.jsoup.helper.HttpConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      WebConversation webConversation0 = new WebConversation();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByHttpUnit(webConversation0, "6$znt", (-1062), "6$znt", "DN.", "The array of suffixes must not be null", (String) null, (-1062), (-1062), hashMap0, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.meterware.httpunit.WebRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      interfaceAPI0.getResponseByHttpClientWithPost("@E-9{lb2dzH<-JX", hashMap0, "@E-9{lb2dzH<-JX");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      MockFile mockFile0 = new MockFile("2Hh=Tq-");
      // Undeclared exception!
      interfaceAPI0.getResponseByHttpClientWithPost((String) null, hashMap0, (File) mockFile0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByHost("Wait for ", "SSL", "CQ", (-2013));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No protocol specified in URL 'Wait for '
         //
         verifyException("com.meterware.httpunit.WebRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      // Undeclared exception!
      try { 
        interfaceAPI0.getHttpClientWithProxy("& !'L}QEo:>O", 1300, "'A?f", "vBLa$]9O1Q?1vWgQ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Host name may not contain blanks
         //
         verifyException("org.apache.http.util.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      HashMap<String, String> hashMap0 = new HashMap<String, String>(1102);
      // Undeclared exception!
      interfaceAPI0.getResponseByHttpClient((HttpClient) null, (String) null, "rPGQT4('", hashMap0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      WebConversation webConversation0 = new WebConversation();
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByHttpUnit(webConversation0, "1g9#Ao%\u0000mT/u^g&y", 442, "1g9#Ao%\u0000mT/u^g&y", "", "1g9#Ao%\u0000mT/u^g&y", "1g9#Ao%\u0000mT/u^g&y", 442, 442, (HashMap<String, String>) null, (HashMap<String, String>) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No protocol specified in URL '1g9#Ao%\u0000mT/u^g&y'
         //
         verifyException("com.meterware.httpunit.WebRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("A[`p_5R%]Drr", "2>jKAo");
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByGet("A[`p_5R%]Drr", hashMap0, hashMap0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No protocol specified in URL 'A[`p_5R%]Drr?A%5B%60p_5R%25%5DDrr=2%3EjKAo'
         //
         verifyException("com.meterware.httpunit.WebRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      interfaceAPI0.getHttpsUrlResponse("0", "CuK vz", (String) null);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      // Undeclared exception!
      interfaceAPI0.getResponseByHttpClientWithPost("Content-Length: ");
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      // Undeclared exception!
      interfaceAPI0.getPageSourceByHttpClientWithPost("");
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByJsoupByGet("com.meterware.httpunit.Button");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed URL: com.meterware.httpunit.Button
         //
         verifyException("org.jsoup.helper.HttpConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByJsoupByPost("6_5|z'pL");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Malformed URL: 6_5|z'pL
         //
         verifyException("org.jsoup.helper.HttpConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByPost((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.meterware.httpunit.WebRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      interfaceAPI0.parseStringToDom("E9+=p{H,-8]{p");
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByJsoup("", (String) null, hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must supply a valid URL
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      MockFile mockFile0 = new MockFile(" Opmz", "D*9<glKht.J");
      interfaceAPI0.parseFileToDom((File) mockFile0, ".l3S!}Mx2h?4 O.$X'`");
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      MockFile mockFile0 = new MockFile("POST", "POST");
      interfaceAPI0.parseFileToDom((File) mockFile0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByGet((String) null, (-416), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.meterware.httpunit.WebRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByGet("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No protocol specified in URL ''
         //
         verifyException("com.meterware.httpunit.WebRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      // Undeclared exception!
      interfaceAPI0.getResponseByHttpClientWithPost("j!pTiQ{p", "dThQV12@*z{e_174zDv");
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      MockFile mockFile0 = new MockFile("");
      ContentType contentType0 = ContentType.APPLICATION_XHTML_XML;
      // Undeclared exception!
      interfaceAPI0.getResponseByHttpClientWithPost("", (File) mockFile0, contentType0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByHost("", (String) null, "", 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      // Undeclared exception!
      interfaceAPI0.getResponseByHttpClientWithGet((String) null);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByPost("MIME type", 0, 1084);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No protocol specified in URL 'MIME type'
         //
         verifyException("com.meterware.httpunit.WebRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      Handler handler0 = new Handler();
      URL uRL0 = MockURL.URL("F-+^Z(JgTim63|N(", "JB~", 3550, "F-+^Z(JgTim63|N(", (URLStreamHandler) handler0);
      Document document0 = interfaceAPI0.parseStringToDom(uRL0, 0);
      assertNull(document0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      MockFile mockFile0 = new MockFile("7{+aK7");
      // Undeclared exception!
      interfaceAPI0.getResponseByHttpClientWithPost("M?$Q\u0002xLAa1KR%86(#", (File) mockFile0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      MockFile mockFile0 = new MockFile("");
      HttpsURLConnection httpsURLConnection0 = interfaceAPI0.getHttpsUrlResponse("", (File) mockFile0, "UTF-8");
      assertNull(httpsURLConnection0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByPost("q1:(!Q", "q1:(!Q", 0, hashMap0, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.phoenix.api.action.InterfaceAPI", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      Document document0 = interfaceAPI0.parseBodyFragment("2Hh=Tq-");
      assertFalse(document0.updateMetaCharsetElement());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      URI uRI0 = MockURI.URI((String) null, "", "'*.", " @s^", "'*.");
      HttpsURLConnection httpsURLConnection0 = interfaceAPI0.getHttpsUrlResponse(" @s^", uRI0, " @s^");
      assertNull(httpsURLConnection0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      // Undeclared exception!
      interfaceAPI0.getPageSourceByHttpClientWithGet("");
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      HttpClient httpClient0 = interfaceAPI0.getHttpClientWithProxy("D_", 0, "YhnAo^O8Fbu9&IT4Wv", "");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByHttpClient(httpClient0, "UTF-8", (String) null, hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByHost("", "", "", 3642, "", "qwf\"z1O,R_t>yeB(\"B3");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No protocol specified in URL ''
         //
         verifyException("com.meterware.httpunit.WebRequest", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      InterfaceAPI interfaceAPI0 = new InterfaceAPI();
      WebConversation webConversation0 = interfaceAPI0.getWebConversation();
      // Undeclared exception!
      try { 
        interfaceAPI0.getResponseByHost("!A^ix_V9hzQ%vyZN?m\"", "", webConversation0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No protocol specified in URL '!A^ix_V9hzQ%vyZN?m\"'
         //
         verifyException("com.meterware.httpunit.WebRequest", e);
      }
  }
}
