/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 28 13:57:47 GMT 2023
 */

package com.github.mautini.pickaxe;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.github.mautini.pickaxe.Scraper;
import com.github.mautini.pickaxe.model.Entity;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Scraper_ESTest extends Scraper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Scraper scraper0 = new Scraper();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, ");");
      URL uRL0 = MockURL.getHttpExample();
      List<Entity> list0 = scraper0.extract(uRL0, 25);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Scraper scraper0 = new Scraper();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/****/TestMigration/resource/CVE-2021-37714/pickaxe/?DzC(<d(ZOH,RM%kHV");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      MockFile mockFile0 = new MockFile("?DzC(<d(ZOH,RM%kHV");
      List<Entity> list0 = scraper0.extract((File) mockFile0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Scraper scraper0 = new Scraper();
      MockFile mockFile0 = new MockFile((String) null, "&G%*vygE3k}a");
      URL uRL0 = mockFile0.toURL();
      try { 
        scraper0.extract(uRL0, 1);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Only http & https protocols supported
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Scraper scraper0 = new Scraper();
      URL uRL0 = MockURL.getHttpExample();
      // Undeclared exception!
      try { 
        scraper0.extract(uRL0, (-2101));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Timeout milliseconds must be 0 (infinite) or greater
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Scraper scraper0 = new Scraper();
      // Undeclared exception!
      try { 
        scraper0.extract((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Scraper scraper0 = new Scraper();
      // Undeclared exception!
      try { 
        scraper0.extract((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.Jsoup", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Scraper scraper0 = new Scraper();
      MockFile mockFile0 = new MockFile("?DzC(<d(ZOH,RM%kHV");
      try { 
        scraper0.extract((File) mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Scraper scraper0 = new Scraper();
      scraper0.extract("Q");
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Scraper scraper0 = new Scraper();
      URL uRL0 = MockURL.getHttpExample();
      try { 
        scraper0.extract(uRL0, 25);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // HTTP error fetching URL
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }
}
