/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 21 11:30:58 GMT 2023
 */

package org.apache.poi.xssf.usermodel.examples;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.poi.xssf.usermodel.examples.CustomXMLMapping;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CustomXMLMapping_ESTest extends CustomXMLMapping_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml";
      try { 
        CustomXMLMapping.main(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can't open the specified file input stream from file: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml'
         //
         verifyException("org.apache.poi.openxml4j.opc.ZipPackage", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "WnB:+!.)J8";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/****/TestMigration/resource/CVE-2019-12415/PoiSamples/WnB:+!.)J8");
      byte[] byteArray0 = new byte[4];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      try { 
        CustomXMLMapping.main(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No valid entries or contents found, this is not a valid OOXML (Office Open XML) file
         //
         verifyException("org.apache.poi.openxml4j.opc.ZipPackage", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      try { 
        CustomXMLMapping.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.poi.xssf.usermodel.examples.CustomXMLMapping", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String[] stringArray0 = new String[6];
      try { 
        CustomXMLMapping.main(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 'path' must be given
         //
         verifyException("org.apache.poi.openxml4j.opc.OPCPackage", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[0];
      try { 
        CustomXMLMapping.main(stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.poi.xssf.usermodel.examples.CustomXMLMapping", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CustomXMLMapping customXMLMapping0 = new CustomXMLMapping();
  }
}
