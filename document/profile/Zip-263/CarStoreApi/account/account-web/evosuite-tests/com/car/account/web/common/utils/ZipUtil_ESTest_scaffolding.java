/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sat Jul 29 08:53:11 GMT 2023
 */

package com.car.account.web.common.utils;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class ZipUtil_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.car.account.web.common.utils.ZipUtil"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    /*No java.lang.System property to set*/
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ZipUtil_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.tools.zip.FallbackZipEncoding",
      "net.lingala.zip4j.tasks.AbstractAddFileToZipTask",
      "org.apache.tools.zip.ZipEncodingHelper",
      "net.lingala.zip4j.model.enums.CompressionLevel",
      "net.lingala.zip4j.model.DigitalSignature",
      "net.lingala.zip4j.model.Zip64EndOfCentralDirectoryRecord",
      "org.apache.tools.zip.Zip64Mode",
      "org.apache.tools.zip.NioZipEncoding",
      "net.lingala.zip4j.util.Zip4jUtil",
      "net.lingala.zip4j.model.ZipModel",
      "net.lingala.zip4j.headers.HeaderWriter",
      "net.lingala.zip4j.exception.ZipException$Type",
      "net.lingala.zip4j.io.outputstream.CountingOutputStream",
      "org.apache.tools.zip.ZipEncodingHelper$SimpleEncodingHolder",
      "net.lingala.zip4j.io.outputstream.NoCipherOutputStream$NoEncrypter",
      "org.apache.tools.zip.ZipFile$BoundedInputStream",
      "net.lingala.zip4j.model.CentralDirectory",
      "org.apache.tools.zip.ZipFile$OffsetEntry",
      "org.apache.tools.zip.ZipFile",
      "org.apache.tools.zip.ZipFile$Entry",
      "net.lingala.zip4j.tasks.AddFilesToZipTask",
      "net.lingala.zip4j.headers.HeaderReader",
      "net.lingala.zip4j.headers.FileHeaderFactory",
      "net.lingala.zip4j.io.outputstream.ZipEntryOutputStream",
      "org.apache.tools.zip.ZipLong",
      "net.lingala.zip4j.exception.ZipException",
      "net.lingala.zip4j.crypto.Encrypter",
      "org.apache.tools.zip.ZipEntry",
      "net.lingala.zip4j.model.enums.RandomAccessFileMode",
      "org.apache.tools.zip.Zip64ExtendedInformationExtraField",
      "net.lingala.zip4j.io.outputstream.SplitOutputStream",
      "net.lingala.zip4j.progress.ProgressMonitor$Task",
      "net.lingala.zip4j.ZipFile",
      "net.lingala.zip4j.io.outputstream.NoCipherOutputStream",
      "net.lingala.zip4j.io.outputstream.AesCipherOutputStream",
      "net.lingala.zip4j.model.Zip64EndOfCentralDirectoryLocator",
      "net.lingala.zip4j.model.enums.AesKeyStrength",
      "net.lingala.zip4j.util.FileUtils",
      "net.lingala.zip4j.io.outputstream.CompressedOutputStream",
      "net.lingala.zip4j.model.enums.CompressionMethod",
      "net.lingala.zip4j.headers.HeaderSignature",
      "net.lingala.zip4j.model.LocalFileHeader",
      "net.lingala.zip4j.tasks.AbstractZipTaskParameters",
      "net.lingala.zip4j.io.outputstream.CipherOutputStream",
      "net.lingala.zip4j.model.EndOfCentralDirectoryRecord",
      "com.car.account.web.common.utils.ZipUtil",
      "net.lingala.zip4j.progress.ProgressMonitor$State",
      "net.lingala.zip4j.progress.ProgressMonitor$Result",
      "net.lingala.zip4j.model.FileHeader",
      "net.lingala.zip4j.io.outputstream.DeflaterOutputStream",
      "net.lingala.zip4j.model.enums.EncryptionMethod",
      "net.lingala.zip4j.model.ZipParameters",
      "net.lingala.zip4j.model.ArchiveExtraDataRecord",
      "net.lingala.zip4j.progress.ProgressMonitor",
      "org.apache.tools.zip.UnparseableExtraFieldData",
      "org.apache.tools.zip.ZipOutputStream",
      "org.apache.tools.zip.ZipEncoding",
      "org.apache.tools.zip.ZipOutputStream$UnicodeExtraFieldPolicy",
      "net.lingala.zip4j.model.AbstractFileHeader",
      "net.lingala.zip4j.util.InternalZipConstants",
      "net.lingala.zip4j.tasks.AddFilesToZipTask$AddFilesToZipTaskParameters",
      "net.lingala.zip4j.io.outputstream.StoreOutputStream",
      "org.apache.tools.zip.ZipShort",
      "org.apache.tools.zip.Zip64RequiredException",
      "net.lingala.zip4j.util.BitUtils",
      "net.lingala.zip4j.model.enums.AesVersion",
      "net.lingala.zip4j.model.ZipHeader",
      "net.lingala.zip4j.tasks.AsyncZipTask",
      "net.lingala.zip4j.io.outputstream.ZipStandardCipherOutputStream",
      "org.apache.tools.zip.ZipFile$2",
      "org.apache.tools.zip.ZipFile$1",
      "org.apache.tools.zip.ZipExtraField",
      "net.lingala.zip4j.util.RawIO",
      "org.apache.tools.zip.CentralDirectoryParsingZipExtraField",
      "net.lingala.zip4j.io.outputstream.ZipOutputStream"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ZipUtil_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.car.account.web.common.utils.ZipUtil",
      "net.lingala.zip4j.model.enums.CompressionMethod",
      "net.lingala.zip4j.model.enums.CompressionLevel",
      "org.apache.tools.zip.ZipLong",
      "org.apache.tools.zip.ZipOutputStream",
      "org.apache.tools.zip.ZipFile",
      "org.apache.tools.zip.ZipEncodingHelper",
      "net.lingala.zip4j.headers.HeaderWriter",
      "net.lingala.zip4j.util.InternalZipConstants",
      "net.lingala.zip4j.progress.ProgressMonitor$Task",
      "net.lingala.zip4j.progress.ProgressMonitor$State",
      "net.lingala.zip4j.model.enums.EncryptionMethod",
      "net.lingala.zip4j.model.enums.AesKeyStrength",
      "net.lingala.zip4j.model.enums.AesVersion",
      "net.lingala.zip4j.model.enums.RandomAccessFileMode",
      "net.lingala.zip4j.exception.ZipException",
      "net.lingala.zip4j.exception.ZipException$Type",
      "net.lingala.zip4j.headers.HeaderSignature",
      "net.lingala.zip4j.util.Zip4jUtil",
      "net.lingala.zip4j.progress.ProgressMonitor$Result"
    );
  }
}
