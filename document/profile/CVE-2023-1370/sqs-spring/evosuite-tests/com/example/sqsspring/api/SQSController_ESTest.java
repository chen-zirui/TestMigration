/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 21 05:03:56 GMT 2023
 */

package com.example.sqsspring.api;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.example.sqsspring.api.SQSController;
import com.example.sqsspring.dto.User;
import com.example.sqsspring.sqs.SQSService;
import com.example.sqsspring.sqs.SQSTemplateProvider;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.springframework.http.ResponseEntity;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SQSController_ESTest extends SQSController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SQSController sQSController0 = new SQSController((SQSService) null);
      ResponseEntity responseEntity0 = sQSController0.pollPayload();
      assertFalse(responseEntity0.hasBody());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SQSController sQSController0 = new SQSController((SQSService) null);
      ResponseEntity responseEntity0 = sQSController0.pollMessage();
      assertEquals(500, responseEntity0.getStatusCodeValue());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SQSService sQSService0 = new SQSService((SQSTemplateProvider) null);
      SQSController sQSController0 = new SQSController(sQSService0);
      User user0 = new User();
      // Undeclared exception!
      try { 
        sQSController0.addMessage(user0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/fasterxml/jackson/databind/ObjectMapper
         //
         verifyException("com.example.sqsspring.utils.MapperUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SQSController sQSController0 = new SQSController((SQSService) null);
      User user0 = new User();
      ResponseEntity responseEntity0 = sQSController0.addMessage(user0);
      assertFalse(responseEntity0.hasBody());
  }
}
