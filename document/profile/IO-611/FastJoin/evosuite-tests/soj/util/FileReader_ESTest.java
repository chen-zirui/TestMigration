/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 21 07:22:10 GMT 2023
 */

package soj.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import soj.util.FileReader;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FileReader_ESTest extends FileReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileReader fileReader0 = new FileReader((String) null, "Rz;OXj]Pm6");
      String string0 = fileReader0.getFilename();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/****/TestMigration/resource/IO-611/FastJoin/+");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "*`C");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      FileReader fileReader0 = new FileReader("+", "j5;a");
      try { 
        fileReader0.readLineAndSplit();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileReader fileReader0 = null;
      try {
        fileReader0 = new FileReader("|G:", "|G:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The pattern may not match the empty string: |G:\\s+
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileReader fileReader0 = null;
      try {
        fileReader0 = new FileReader("/", "/");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileReader fileReader0 = new FileReader("8/Le!#", "k*TV*M_-;%");
      fileReader0.readLine();
      assertEquals("8/Le!#", fileReader0.getFilename());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/****/TestMigration/resource/IO-611/FastJoin/+");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "*`C");
      FileReader fileReader0 = new FileReader("+", "j5;0");
      List<String> list0 = fileReader0.readLineAndSplit();
      assertNotNull(list0);
      assertEquals("+", fileReader0.getFilename());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileReader fileReader0 = new FileReader("8/Le!#", "k*TV*M_-;%");
      fileReader0.readLineAndSplit();
      assertEquals("8/Le!#", fileReader0.getFilename());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/****/TestMigration/resource/IO-611/FastJoin/8/Le!#");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "k*TV*M_-;%");
      FileReader fileReader0 = new FileReader("8/Le!#", "/W8pTw#lgC;'q8");
      String string0 = fileReader0.readLine();
      assertNotNull(string0);
      assertEquals("8/Le!#", fileReader0.getFilename());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileReader fileReader0 = new FileReader("", "");
      String string0 = fileReader0.getFilename();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileReader fileReader0 = new FileReader((String) null, (String) null);
      assertNull(fileReader0.getFilename());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileReader fileReader0 = new FileReader("8/Le!#", "k*TV*M_-;%");
      String string0 = fileReader0.getFilename();
      assertEquals("8/Le!#", string0);
  }
}
