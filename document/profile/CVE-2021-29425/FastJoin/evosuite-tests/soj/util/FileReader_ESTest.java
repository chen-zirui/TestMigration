/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 21 07:20:11 GMT 2023
 */

package soj.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.List;
import java.util.regex.PatternSyntaxException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import soj.util.FileReader;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FileReader_ESTest extends FileReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/data1/ziruichen/TestMigration/resource/CVE-2021-29425/FastJoin/n0rBu=YuNcV0VztLrb_");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      FileReader fileReader0 = new FileReader("n0rBu=YuNcV0VztLrb_", "n0rBu=YuNcV0VztLrb_");
      String string0 = fileReader0.readLine();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileReader fileReader0 = new FileReader("", "UMA?ik_:");
      String string0 = fileReader0.getFilename();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/data1/ziruichen/TestMigration/resource/CVE-2021-29425/FastJoin/j?GbM");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      FileReader fileReader0 = new FileReader("j?GbM", "tm9");
      try { 
        fileReader0.readLineAndSplit();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/data1/ziruichen/TestMigration/resource/CVE-2021-29425/FastJoin/u@{b");
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileReader fileReader0 = new FileReader("u@{b", (String) null);
      try { 
        fileReader0.readLine();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileReader fileReader0 = null;
      try {
        fileReader0 = new FileReader("qS`r$:180}[|[ThJO^", "qS`r$:180}[|[ThJO^");
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed character class near index 20
         // qS`r$:180}[|[ThJO^\\s+
         //                     ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileReader fileReader0 = null;
      try {
        fileReader0 = new FileReader("9Blf'p %7k%^JYM0cqb", "|tvg`3");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The pattern may not match the empty string: |tvg`3\\s+
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileReader fileReader0 = null;
      try {
        fileReader0 = new FileReader("/", "i9T0|uQ_Do");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/data1/ziruichen/TestMigration/resource/CVE-2021-29425/FastJoin/5SER/w");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "5SER/w");
      FileReader fileReader0 = new FileReader("5SER/w", "");
      String string0 = fileReader0.readLine();
      assertNotNull(string0);
      assertEquals("5SER/w", fileReader0.getFilename());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileReader fileReader0 = new FileReader("tm9", "");
      fileReader0.readLine();
      assertEquals("tm9", fileReader0.getFilename());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/data1/ziruichen/TestMigration/resource/CVE-2021-29425/FastJoin/1");
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      FileReader fileReader0 = new FileReader("1", "UTF-16BE");
      List<String> list0 = fileReader0.readLineAndSplit();
      assertNotNull(list0);
      assertEquals("1", fileReader0.getFilename());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileReader fileReader0 = new FileReader("tm9", "");
      fileReader0.readLineAndSplit();
      assertEquals("tm9", fileReader0.getFilename());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileReader fileReader0 = new FileReader((String) null, "UTF-16BE");
      String string0 = fileReader0.getFilename();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileReader fileReader0 = new FileReader("5SER/w", "");
      String string0 = fileReader0.getFilename();
      assertEquals("5SER/w", string0);
  }
}
