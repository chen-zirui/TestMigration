/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Jul 28 13:45:42 GMT 2023
 */

package live.lumia.utils;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class XMLUtil_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "live.lumia.utils.XMLUtil"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    /*No java.lang.System property to set*/
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(XMLUtil_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.logging.log4j.message.AbstractMessageFactory",
      "org.apache.logging.log4j.message.FlowMessage",
      "org.apache.logging.log4j.status.StatusListener",
      "org.apache.logging.log4j.message.ParameterizedMessageFactory",
      "org.apache.logging.log4j.message.SimpleMessage",
      "org.apache.logging.log4j.message.ReusableObjectMessage",
      "org.apache.logging.log4j.message.ReusableMessageFactory",
      "org.apache.logging.log4j.Level",
      "live.lumia.utils.XMLUtil",
      "org.apache.logging.log4j.spi.LoggerRegistry$MapFactory",
      "org.apache.logging.log4j.message.ReusableMessage",
      "org.apache.logging.log4j.spi.StandardLevel",
      "org.apache.logging.log4j.simple.SimpleLoggerContextFactory",
      "org.json.JSONException",
      "org.json.JSONObject",
      "org.apache.logging.log4j.spi.LoggerRegistry",
      "org.apache.logging.log4j.util.LoaderUtil$ThreadContextClassLoaderGetter",
      "org.apache.logging.log4j.MarkerManager$Log4jMarker",
      "org.apache.logging.log4j.message.DefaultFlowMessageFactory",
      "org.apache.logging.log4j.util.StringBuilderFormattable",
      "org.apache.logging.log4j.MarkerManager",
      "org.apache.logging.log4j.Logger",
      "org.apache.logging.log4j.util.Supplier",
      "org.apache.logging.log4j.util.Strings",
      "org.apache.logging.log4j.status.StatusData",
      "org.apache.logging.log4j.util.Constants",
      "org.apache.logging.log4j.util.MessageSupplier",
      "org.apache.logging.log4j.util.ProviderUtil",
      "org.json.JSONObject$Null",
      "org.apache.logging.log4j.message.FlowMessageFactory",
      "org.apache.logging.log4j.message.ReusableParameterizedMessage",
      "org.apache.logging.log4j.message.ReusableSimpleMessage",
      "org.apache.logging.log4j.util.LoaderUtil",
      "org.apache.logging.log4j.simple.SimpleLoggerContext",
      "org.apache.logging.log4j.message.ParameterizedNoReferenceMessageFactory",
      "org.apache.logging.log4j.util.PropertiesUtil",
      "org.apache.logging.log4j.spi.LoggerContext",
      "org.apache.logging.log4j.message.ExitMessage",
      "org.apache.logging.log4j.util.ReflectionUtil",
      "org.apache.logging.log4j.message.Message",
      "org.apache.logging.log4j.spi.LoggerRegistry$ConcurrentMapFactory",
      "org.json.XML",
      "org.json.JSONPointerException",
      "org.apache.logging.log4j.util.ReflectionUtil$PrivateSecurityManager",
      "org.apache.logging.log4j.Marker",
      "org.apache.logging.log4j.spi.AbstractLogger",
      "org.apache.logging.log4j.simple.SimpleLogger",
      "org.json.JSONPointer",
      "org.apache.logging.log4j.message.MessageFactory",
      "org.apache.logging.log4j.status.StatusLogger$BoundedQueue",
      "org.apache.logging.log4j.spi.LoggerContextFactory",
      "org.json.JSONTokener",
      "org.apache.logging.log4j.message.EntryMessage",
      "org.apache.logging.log4j.status.StatusLogger",
      "org.apache.logging.log4j.spi.ExtendedLogger",
      "org.apache.logging.log4j.message.MessageFactory2",
      "org.apache.logging.log4j.LogManager",
      "org.json.JSONArray",
      "org.json.XMLTokener"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(XMLUtil_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.logging.log4j.MarkerManager",
      "org.apache.logging.log4j.MarkerManager$Log4jMarker",
      "org.apache.logging.log4j.util.LoaderUtil",
      "org.apache.logging.log4j.util.PropertiesUtil",
      "org.apache.logging.log4j.util.Constants",
      "org.apache.logging.log4j.spi.AbstractLogger",
      "org.apache.logging.log4j.message.AbstractMessageFactory",
      "org.apache.logging.log4j.message.ParameterizedNoReferenceMessageFactory",
      "org.apache.logging.log4j.message.DefaultFlowMessageFactory",
      "org.apache.logging.log4j.status.StatusLogger$BoundedQueue",
      "org.apache.logging.log4j.simple.SimpleLogger",
      "org.apache.logging.log4j.spi.StandardLevel",
      "org.apache.logging.log4j.util.Strings",
      "org.apache.logging.log4j.Level",
      "org.apache.logging.log4j.status.StatusLogger",
      "org.apache.logging.log4j.util.ProviderUtil",
      "org.apache.logging.log4j.message.SimpleMessage",
      "org.apache.logging.log4j.status.StatusData",
      "org.apache.logging.log4j.message.ReusableMessageFactory",
      "org.apache.logging.log4j.simple.SimpleLoggerContext",
      "org.apache.logging.log4j.spi.LoggerRegistry",
      "org.apache.logging.log4j.simple.SimpleLoggerContextFactory",
      "org.apache.logging.log4j.LogManager",
      "org.apache.logging.log4j.message.ParameterizedMessageFactory",
      "live.lumia.utils.XMLUtil",
      "org.json.XML",
      "org.json.JSONObject",
      "org.apache.logging.log4j.util.ReflectionUtil",
      "org.json.XMLTokener",
      "org.json.JSONException"
    );
  }
}
