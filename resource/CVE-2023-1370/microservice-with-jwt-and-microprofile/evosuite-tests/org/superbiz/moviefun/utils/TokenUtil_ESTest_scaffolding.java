/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Jul 13 03:52:07 GMT 2023
 */

package org.superbiz.moviefun.utils;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class TokenUtil_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.superbiz.moviefun.utils.TokenUtil"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("os.name", "Linux"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("user.home", "/data0/ziruichen"); 
    java.lang.System.setProperty("java.home", "/usr/lib/jvm/java-8-openjdk-amd64/jre"); 
    java.lang.System.setProperty("user.dir", "/data1/ziruichen/TestMigration/resource/CVE-2023-1370/microservice-with-jwt-and-microprofile"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("line.separator", "\n"); 
    java.lang.System.setProperty("java.specification.version", "1.8"); 
    java.lang.System.setProperty("awt.toolkit", "sun.awt.X11.XToolkit"); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("file.separator", "/"); 
    java.lang.System.setProperty("java.awt.graphicsenv", "sun.awt.X11GraphicsEnvironment"); 
    java.lang.System.setProperty("java.awt.printerjob", "sun.print.PSPrinterJob"); 
    java.lang.System.setProperty("java.class.path", "/tmp/EvoSuite_pathingJar2283436002343154593.jar"); 
    java.lang.System.setProperty("java.class.version", "52.0"); 
    java.lang.System.setProperty("java.endorsed.dirs", "/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"); 
    java.lang.System.setProperty("java.ext.dirs", "/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"); 
    java.lang.System.setProperty("java.library.path", "lib"); 
    java.lang.System.setProperty("java.runtime.name", "OpenJDK Runtime Environment"); 
    java.lang.System.setProperty("java.runtime.version", "1.8.0_362-8u372-ga~us1-0ubuntu1~20.04-b09"); 
    java.lang.System.setProperty("java.specification.name", "Java Platform API Specification"); 
    java.lang.System.setProperty("java.specification.vendor", "Oracle Corporation"); 
    java.lang.System.setProperty("java.vendor", "Private Build"); 
    java.lang.System.setProperty("java.vendor.url", "http://java.oracle.com/"); 
    java.lang.System.setProperty("java.version", "1.8.0_362"); 
    java.lang.System.setProperty("java.vm.info", "mixed mode"); 
    java.lang.System.setProperty("java.vm.name", "OpenJDK 64-Bit Server VM"); 
    java.lang.System.setProperty("java.vm.specification.name", "Java Virtual Machine Specification"); 
    java.lang.System.setProperty("java.vm.specification.vendor", "Oracle Corporation"); 
    java.lang.System.setProperty("java.vm.specification.version", "1.8"); 
    java.lang.System.setProperty("java.vm.vendor", "Private Build"); 
    java.lang.System.setProperty("java.vm.version", "25.362-b09"); 
    java.lang.System.setProperty("os.arch", "amd64"); 
    java.lang.System.setProperty("os.version", "5.4.0-42-generic"); 
    java.lang.System.setProperty("path.separator", ":"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "ziruichen"); 
    java.lang.System.setProperty("user.timezone", "Asia/Shanghai"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(TokenUtil_ESTest_scaffolding.class.getClassLoader() ,
      "com.nimbusds.jose.JWSProvider",
      "com.nimbusds.jose.JOSEException",
      "net.minidev.json.parser.JSONParserInputStream",
      "net.minidev.json.JSONAwareEx",
      "com.nimbusds.jose.PlainObject",
      "net.minidev.json.parser.ContainerFactory",
      "com.nimbusds.jose.util.JSONObjectUtils",
      "com.nimbusds.jose.JWSObject$State",
      "net.minidev.json.parser.ParseException",
      "com.nimbusds.jwt.JWT",
      "com.nimbusds.jose.crypto.AlgorithmSupportMessage",
      "com.nimbusds.jose.JOSEObject",
      "org.superbiz.moviefun.utils.TokenUtil$InvalidClaims",
      "net.minidev.json.JStylerObj$StringProtector",
      "com.nimbusds.jose.util.Base64",
      "com.nimbusds.jose.jwk.OctetSequenceKey",
      "com.nimbusds.jose.crypto.BaseJWSProvider",
      "com.nimbusds.jose.crypto.RSASSAProvider",
      "net.minidev.json.parser.JSONParserString",
      "com.nimbusds.jose.JWSAlgorithm",
      "com.nimbusds.jose.util.DateUtils",
      "com.nimbusds.jwt.SignedJWT",
      "net.minidev.json.parser.JSONParserReader",
      "net.minidev.json.JStylerObj$MPAgressive",
      "com.nimbusds.jose.JWSSigner",
      "com.nimbusds.jose.PlainHeader",
      "com.nimbusds.jose.jwk.KeyUse",
      "net.minidev.json.JSONValue",
      "com.nimbusds.jose.KeyLengthException",
      "net.minidev.json.reader.JsonWriter$19",
      "com.nimbusds.jose.jwk.ECParameterTable",
      "com.nimbusds.jose.JOSEProvider",
      "net.minidev.json.reader.JsonWriter",
      "net.minidev.json.reader.JsonWriter$18",
      "net.minidev.json.reader.JsonWriter$17",
      "net.minidev.json.reader.JsonWriter$16",
      "net.minidev.json.reader.JsonWriter$15",
      "com.nimbusds.jwt.JWTClaimsSet",
      "net.minidev.json.reader.JsonWriter$14",
      "net.jcip.annotations.ThreadSafe",
      "net.minidev.json.reader.JsonWriter$13",
      "net.minidev.json.reader.JsonWriter$12",
      "net.minidev.json.reader.JsonWriter$11",
      "net.minidev.json.reader.JsonWriter$10",
      "com.nimbusds.jose.jca.JCAAware",
      "net.minidev.json.parser.ContainerFactory$2",
      "net.minidev.json.parser.ContainerFactory$1",
      "net.minidev.json.JSONStreamAware",
      "com.nimbusds.jose.jwk.KeyType",
      "net.minidev.json.JStylerObj",
      "net.minidev.json.parser.JSONParserMemory",
      "net.minidev.json.reader.JsonWriter$23",
      "net.minidev.json.reader.JsonWriter$22",
      "net.minidev.json.JSONAware",
      "net.minidev.json.reader.JsonWriter$21",
      "com.nimbusds.jose.jwk.ECKey$Builder",
      "net.minidev.json.reader.JsonWriter$20",
      "com.nimbusds.jose.CommonSEHeader",
      "net.minidev.json.reader.JsonWriterI",
      "com.nimbusds.jwt.JWTClaimsSet$Builder",
      "com.nimbusds.jose.jwk.RSAKey",
      "net.minidev.json.JSONArray",
      "net.minidev.json.parser.ContentHandlerDumy",
      "org.superbiz.moviefun.utils.TokenUtil",
      "com.nimbusds.jose.util.ByteUtils",
      "com.nimbusds.jose.JWEObject",
      "com.nimbusds.jose.JWSObject",
      "net.minidev.json.parser.JSONParserBase$MSB",
      "com.nimbusds.jose.crypto.RSASSA",
      "com.nimbusds.jose.Header",
      "com.nimbusds.jose.JWEAlgorithm",
      "com.nimbusds.jose.util.Base64URL",
      "net.minidev.json.JStylerObj$MustProtect",
      "net.minidev.json.JSONStyle",
      "net.minidev.json.JStylerObj$MPTrue",
      "org.eclipse.microprofile.jwt.Claims",
      "net.minidev.json.reader.JsonWriter$1",
      "net.minidev.json.reader.JsonWriter$2",
      "com.nimbusds.jose.JWSHeader$Builder",
      "com.nimbusds.jose.PayloadTransformer",
      "com.nimbusds.jose.JWSHeader",
      "com.nimbusds.jose.jwk.JWK",
      "com.nimbusds.jose.Requirement",
      "com.nimbusds.jose.Payload",
      "com.nimbusds.jose.crypto.RSASSASigner",
      "com.nimbusds.jose.jca.JCAContext",
      "com.nimbusds.jose.KeyException",
      "net.minidev.json.JSONObject",
      "com.nimbusds.jose.crypto.MACProvider",
      "com.nimbusds.jose.JOSEObjectType",
      "net.minidev.json.reader.JsonWriter$7",
      "net.minidev.json.reader.JsonWriter$8",
      "net.minidev.json.reader.JsonWriter$9",
      "net.minidev.json.parser.ContentHandler",
      "com.nimbusds.jose.Payload$Origin",
      "net.minidev.json.reader.JsonWriter$3",
      "net.minidev.json.reader.JsonWriter$4",
      "net.minidev.json.reader.JsonWriter$5",
      "net.minidev.json.reader.JsonWriter$6",
      "com.nimbusds.jose.jwk.ECKey$Curve",
      "net.minidev.json.JStylerObj$Escape4Web",
      "com.nimbusds.jose.jwk.SecretJWK",
      "net.minidev.json.parser.JSONParser",
      "net.minidev.json.parser.JSONParserBase",
      "net.minidev.json.reader.JsonWriter$WriterByInterface",
      "com.nimbusds.jose.jwk.ECKey",
      "net.minidev.json.parser.JSONParserStream",
      "com.nimbusds.jwt.JWTClaimsSetTransformer",
      "com.nimbusds.jose.util.Base64Codec",
      "com.nimbusds.jose.crypto.MACSigner",
      "com.nimbusds.jose.JWSVerifier",
      "com.nimbusds.jose.JWEHeader",
      "net.minidev.json.parser.FakeContainerFactory",
      "com.nimbusds.jose.jwk.AssymetricJWK",
      "net.jcip.annotations.Immutable",
      "net.minidev.json.JSONStreamAwareEx",
      "net.minidev.json.JStylerObj$MPSimple",
      "net.minidev.json.parser.JSONParserByteArray",
      "net.minidev.json.JStylerObj$EscapeLT",
      "com.nimbusds.jose.Algorithm"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(TokenUtil_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.superbiz.moviefun.utils.TokenUtil",
      "org.superbiz.moviefun.utils.TokenUtil$InvalidClaims",
      "net.minidev.json.parser.JSONParser",
      "org.eclipse.microprofile.jwt.Claims",
      "com.nimbusds.jose.Requirement",
      "com.nimbusds.jose.Algorithm",
      "com.nimbusds.jose.JWSAlgorithm",
      "com.nimbusds.jose.JOSEObjectType",
      "com.nimbusds.jose.Header",
      "com.nimbusds.jose.CommonSEHeader",
      "com.nimbusds.jose.JWSHeader",
      "com.nimbusds.jose.util.Base64",
      "com.nimbusds.jose.util.Base64URL",
      "net.minidev.json.JSONObject",
      "net.minidev.json.JStylerObj",
      "net.minidev.json.JSONStyle",
      "net.minidev.json.reader.JsonWriter",
      "net.minidev.json.JSONValue",
      "net.minidev.json.parser.JSONParserBase",
      "net.minidev.json.parser.ContainerFactory",
      "net.minidev.json.parser.ContentHandlerDumy",
      "net.minidev.json.parser.ParseException",
      "com.nimbusds.jose.jwk.JWK",
      "com.nimbusds.jose.jwk.OctetSequenceKey",
      "com.nimbusds.jose.util.Base64Codec",
      "com.nimbusds.jose.crypto.RSASSAProvider",
      "com.nimbusds.jwt.JWTClaimsSet",
      "com.nimbusds.jose.crypto.MACProvider",
      "com.nimbusds.jose.JOSEObject",
      "com.nimbusds.jose.JWSObject",
      "com.nimbusds.jwt.SignedJWT",
      "com.nimbusds.jose.Payload",
      "com.nimbusds.jose.Payload$Origin",
      "com.nimbusds.jose.JWSObject$State",
      "com.nimbusds.jose.JOSEException",
      "com.nimbusds.jose.jwk.ECKey",
      "com.nimbusds.jose.jwk.RSAKey",
      "com.nimbusds.jose.jwk.ECKey$Curve",
      "com.nimbusds.jose.jwk.KeyType",
      "net.minidev.json.JSONArray",
      "com.nimbusds.jose.jwk.ECParameterTable"
    );
  }
}
